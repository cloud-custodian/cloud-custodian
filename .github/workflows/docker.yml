name: "Docker Build"

env:
  repository: "sonnyshi"
  job_metadata: '
    {
      "c7n": {
        "name": "cli",
        "description": "Cloud Management Rules Engine",
        "custodian_image_var": "CUSTODIAN_CLI_IMAGE"
      },
      "c7n-org": {
        "name": "org",
        "description": "Cloud Custodian Organization Runner",
        "custodian_image_var": "CUSTODIAN_ORG_IMAGE"
      },
      "mailer": {
        "name": "mailer",
        "description": "Cloud Custodian Notification Delivery",
        "custodian_image_var": "CUSTODIAN_MAILER_IMAGE"
      },
      "policystream": {
        "name": "policystream",
        "description": "Custodian policy changes streamed from Git",
        "custodian_image_var": "CUSTODIAN_POLICYSTREAM_IMAGE"
      }
  }'


on:
  push:
    branches:
      - docker-buildx
    tags:
      # todo: update for 1.0
      - 0.*

jobs:

  Publish:
    strategy:
      fail-fast: false
      matrix:
        image:
          - c7n
          - c7n-org
          - mailer
          - policystream
        flavor:
          - ""
          - "distroless"

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: 3.8
      - name: Install Docker Build Env
        # bin directory is in .dockerignore
        run: |
          python -m pip install --upgrade pip
          mkdir -p bin
          wget -q -O bin/trivy.tgz https://github.com/aquasecurity/trivy/releases/download/v0.5.4/trivy_0.5.4_Linux-64bit.tar.gz
          cd bin && tar xzf trivy.tgz

      - name: ${{ matrix.image }}-${{ matrix.flavor }} build and push
        uses: ./.github/composites/docker-build-push
        env:
          HUB_USER: ${{ secrets.DOCKER_CI_HUB_USER }}
          HUB_TOKEN: ${{ secrets.DOCKER_CI_HUB_TOKEN }}
        with:
          dockerfile: "docker/${{ fromJSON(env.job_metadata)[matrix.image]['name'] }}${{ matrix.flavor && format('-{0}', matrix.flavor) || matrix.flavor }}"
          repository: ${{ env.repository }}
          image: ${{ matrix.image }}
          name: "${{ fromJSON(env.job_metadata)[matrix.image]['name'] }}"
          description: "${{ fromJSON(env.job_metadata)[matrix.image]['description'] }}"
          tag_prefix: "${{ matrix.flavor && format('{0}-', matrix.flavor) || matrix.flavor }}"
          CUSTODIAN_IMAGE_VAR: "${{ fromJSON(env.job_metadata)[matrix.image]['custodian_image_var'] }}
