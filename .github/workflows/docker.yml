name: "Docker Build"

env:
  repository: "sonnyshi"

on:
  push:
    branches:
      - docker-buildx
    tags:
      # todo: update for 1.0
      - 0.*

jobs:

  Publish:
    strategy:
      matrix:
        images:
          - c7n
          - c7n-org
          - mailer
          - policystream
        flavor:
          - ""
          - "-distroless"
        include:
          - image: c7n
            image_name: cli
            image_description: "Cloud Management Rules Engine"
            dockerfile: docker/cli
          - image: c7n-org
            image_name: org
            image_description: "Cloud Custodian Organization Runner"
            dockerfile: docker/org
          - image: mailer
            image_name: mailer
            image_description: "Cloud Custodian Notification Delivery"
            dockerfile: docker/mailer
          - image: policystream
            image_name: policystream
            image_description: "Custodian policy changes streamed from Git"

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: 3.8
      - name: Install Docker Build Env
        # bin directory is in .dockerignore
        run: |
          python -m pip install --upgrade pip
          pip install docker click pytest pyyaml six
          mkdir -p bin
          wget -q -O bin/trivy.tgz https://github.com/aquasecurity/trivy/releases/download/v0.5.4/trivy_0.5.4_Linux-64bit.tar.gz
          cd bin && tar xzf trivy.tgz

      # For *lightweight* functional image tests
      # - name: Configure AWS credentials
      #   uses: aws-actions/configure-aws-credentials@v1
      #   with:
      #     aws-access-key-id: ${{ secrets.DOCKER_CI_AWS_ACCESS_KEY_ID }}
      #     aws-secret-access-key: ${{ secrets.DOCKER_CI_AWS_SECRET_ACCESS_KEY }}
      #     aws-region: us-east-1

      # Ubuntu images
      - name: generate
        env:
          HUB_USER: ${{ secrets.DOCKER_CI_HUB_USER }}
          HUB_TOKEN: ${{ secrets.DOCKER_CI_HUB_TOKEN }}
        run: |
          python tools/dev/dockerpkg.py generate

      - name: ${{ matrix.image }} ${{ matrix.image_name }}${{ matrix.flavor }} build and push
        uses: ./.github/composites/docker-build-push
        env:
          HUB_USER: ${{ secrets.DOCKER_CI_HUB_USER }}
          HUB_TOKEN: ${{ secrets.DOCKER_CI_HUB_TOKEN }}
        with:
          dockerfile: ${{ matrix.dockerfile }}${{ matrix.flavor }}
          repository: ${{ env.repository }}
          image: ${{ matrix.image }}
          image_name: ${{ matrix.image_name }}
          description: ${{ matrix.image_description }}
