# Dockerfiles are generated from tools/dev/dockerpkg.py
FROM chainguard/wolfi-base:latest as build-env

ARG POETRY_VERSION="1.5.1"
ARG PYTHON_VERSION="3.12"

# pre-requisite distro deps, and build env setup
RUN adduser -D --gecos "" custodian
RUN apk add curl bash python-${PYTHON_VERSION}

SHELL ["/bin/bash", "-c"]

RUN python -m venv /app
RUN /app/bin/pip install -U pip setuptools &&     /app/bin/pip install "poetry==${POETRY_VERSION}"
ARG PATH="/root/.local/bin:$PATH"

WORKDIR /src
ADD pyproject.toml poetry.lock README.md /src
RUN . /app/bin/activate && poetry install --without dev --no-root

ADD c7n /src/c7n/
RUN . /app/bin/activate && poetry install --only-root

ADD tools/c7n_left /src/tools/c7n_left
RUN . /app/bin/activate && cd tools/c7n_left && poetry install --without dev

RUN mkdir /output

FROM chainguard/wolfi-base:latest

LABEL name="left" \
      repository="http://github.com/cloud-custodian/cloud-custodian"

ARG PYTHON_VERSION="3.12"

RUN apk add python-${PYTHON_VERSION}

# These should remain below any other commands because they will invalidate
# the layer cache
COPY --from=build-env /src /src
COPY --from=build-env /app /app
COPY --from=build-env /output /output


RUN adduser -D -h /home/custodian --gecos "" custodian
USER custodian
WORKDIR /home/custodian
ENV LC_ALL="C.UTF-8" LANG="C.UTF-8"
VOLUME ["/home/custodian"]
ENTRYPOINT ["/app/bin/c7n-left"]
CMD ["--help"]


LABEL "org.opencontainers.image.title"="left"
LABEL "org.opencontainers.image.description"="Cloud Custodian IaC Engine"
LABEL "org.opencontainers.image.documentation"="https://cloudcustodian.io/docs/tools/c7n-left.html"
