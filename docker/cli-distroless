# Dockerfiles are generated from tools/dev/dockerpkg.py

FROM debian:10-slim as build-env

# pre-requisite distro deps, and build env setup
RUN adduser --disabled-login --gecos "" custodian
RUN apt-get --yes update
RUN apt-get --yes install build-essential curl python3-venv python3-dev --no-install-recommends
RUN python3 -m venv /usr/local

WORKDIR /src

# Add core & aws packages
ADD pyproject.toml poetry.lock README.md /src/
ADD c7n /src/c7n/
RUN . /usr/local/bin/activate && pip install -q wheel &&       pip install -U pip
RUN . /usr/local/bin/activate && pip install -q aws-xray-sdk psutil jsonpatch
ADD tools /tools

# Install requested providers
ARG providers="azure gcp kube openstack"
RUN mkdir -p /src/tools && . /usr/local/bin/activate &&     for pkg in $providers; do         pip install "/tools/c7n_$pkg";         cp -R "/tools/c7n_$pkg" "/src/tools/c7n_$pkg";         rm -R "/src/tools/c7n_$pkg/tests"; done

RUN mkdir /output

FROM gcr.io/distroless/python3-debian10

LABEL name="cli" \
      repository="http://github.com/cloud-custodian/cloud-custodian"

COPY --from=build-env /src /src
COPY --from=build-env /usr/local /usr/local
COPY --from=build-env /etc/passwd /etc/passwd
COPY --from=build-env /etc/group /etc/group
COPY --chown=custodian:custodian --from=build-env /output /output
COPY --chown=custodian:custodian --from=build-env /home/custodian /home/custodian

USER custodian
WORKDIR /home/custodian
ENV LC_ALL="C.UTF-8" LANG="C.UTF-8"
VOLUME ["/home/custodian"]
ENTRYPOINT ["/usr/local/bin/custodian"]
CMD ["--help"]
