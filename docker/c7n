# Dockerfiles are generated from tools/dev/dockerpkg.py
FROM ubuntu:24.04 AS build-env

ARG UV_VERSION="0.7.6"
SHELL ["/bin/bash", "-c"]

# pre-requisite distro deps, and build env setup
RUN apt-get --yes update
RUN apt-get --yes install --no-install-recommends build-essential     curl python3-venv python3-dev adduser
# todo: 24.04 is trying to standardize on ubuntu as builtin non root.
RUN adduser --disabled-login --gecos "" custodian
COPY --from=ghcr.io/astral-sh/uv:latest /uv /uvx /bin/
ARG PATH="/root/.local/bin:$PATH"

WORKDIR /src
# Add core & aws packages
ARG providers="gcp azure kube openstack tencentcloud oci awscc"

# copy pyproject.tomls for all packages
ADD pyproject.toml uv.lock README.md /src/

# We include `pyproject.toml` and `uv.lock` first to allow
# cache of dependency installs.

ADD tools/c7n_gcp/pyproject.toml /src/tools/c7n_gcp/

ADD tools/c7n_azure/pyproject.toml /src/tools/c7n_azure/

ADD tools/c7n_kube/pyproject.toml /src/tools/c7n_kube/

ADD tools/c7n_openstack/pyproject.toml /src/tools/c7n_openstack/

ADD tools/c7n_tencentcloud/pyproject.toml /src/tools/c7n_tencentcloud/

ADD tools/c7n_oci/pyproject.toml /src/tools/c7n_oci/

ADD tools/c7n_awscc/pyproject.toml /src/tools/c7n_awscc/


# install dependencies
RUN PKG_ARGS=`python3 -c 'print(" ".join(["--package=%s" % p for p in "${providers}".split()]), end="")'` &&     uv sync --no-install-workspace --locked --package c7n $PKG_ARGS

# copy packages
ADD c7n /src/c7n/

# Now install the root of each provider

ADD tools/c7n_gcp /src/tools/c7n_gcp

ADD tools/c7n_azure /src/tools/c7n_azure

ADD tools/c7n_kube /src/tools/c7n_kube

ADD tools/c7n_openstack /src/tools/c7n_openstack

ADD tools/c7n_tencentcloud /src/tools/c7n_tencentcloud

ADD tools/c7n_oci /src/tools/c7n_oci

ADD tools/c7n_awscc /src/tools/c7n_awscc


# install packages
RUN PKG_ARGS=`python3 -c 'print(" ".join(["--package=c7n_%s" % p for p in "${providers}".split()]), end="")'` &&     uv sync --locked --package c7n $PKG_ARGS

RUN mkdir /output

FROM ubuntu:24.04

LABEL name="cli" \
      repository="http://github.com/cloud-custodian/cloud-custodian"

ENV DEBIAN_FRONTEND=noninteractive

RUN apt-get --yes update \
        && apt-get --yes install python3 python3-venv adduser  --no-install-recommends \
        && rm -Rf /var/cache/apt \
        && rm -Rf /var/lib/apt/lists/* \
        && rm -Rf /var/log/*

# These should remain below any other commands because they will invalidate
# the layer cache
COPY --from=build-env /src /src
COPY --from=build-env /usr/local /usr/local
COPY --from=build-env /output /output


RUN adduser --disabled-login --gecos "" custodian
USER custodian
WORKDIR /home/custodian
ENV LC_ALL="C.UTF-8" LANG="C.UTF-8"
VOLUME ["/home/custodian"]
ENTRYPOINT ["/usr/local/bin/custodian"]
CMD ["--help"]

LABEL "org.opencontainers.image.title"="cli"
LABEL "org.opencontainers.image.description"="Cloud Management Rules Engine"
LABEL "org.opencontainers.image.documentation"="https://cloudcustodian.io/docs"
