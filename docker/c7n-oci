
FROM ubuntu:22.04 as build-env

ARG POETRY_VERSION="1.5.1"
SHELL ["/bin/bash", "-c"]

# Permissions required to containers running functions with OCI Functions
# https://docs.oracle.com/en-us/iaas/Content/Functions/Tasks/functionsrunningasunprivileged.htm#Permissions_Granted_to_Containers_Running_Functions
RUN groupadd --gid 1000 fn && \
     adduser --uid 1000 --gid 1000 fn

RUN apt-get --yes update
RUN apt-get --yes install --no-install-recommends build-essential curl python3-venv python3-dev
RUN python3 -m venv /usr/local
RUN curl -sSL https://install.python-poetry.org | python3 - -y --version ${POETRY_VERSION}
ARG PATH="/root/.local/bin:$PATH"
WORKDIR /src

ENV PATH="/root/.local/bin:$PATH"
# Add core
ADD pyproject.toml poetry.lock README.md /src/

# Ignore root first pass so if source changes we don't have to invalidate
# dependency install
RUN . /usr/local/bin/activate && poetry install --without dev --no-root

# Now install the root package, we used to do this after dependencies of other providers
# but since moving c7n to a main dependency in pyproject toml we have to do this one first.
ADD c7n /src/c7n/
RUN . /usr/local/bin/activate && poetry install --only-root

# Add oci provider packages
# We include `pyproject.toml` and `poetry.lock` first to allow
# cache of dependency installs.

ADD tools/c7n_oci/pyproject.toml tools/c7n_oci/poetry.lock /src/tools/c7n_oci/
RUN . /usr/local/bin/activate &&     cd tools/c7n_oci &&     poetry install --without dev --no-root

# Now install the root of oci provider

ADD tools/c7n_oci /src/tools/c7n_oci
RUN . /usr/local/bin/activate &&     cd tools/c7n_oci &&     poetry install --only-root

# fdk depends on pytest version 5.4.3, and there is a conflict with the pytest version mentioned in tool.poetry.group.dev.dependencies
# so installing here
RUN . /usr/local/bin/activate && pip3 install --no-cache --no-cache-dir fdk==0.1.59

RUN mkdir /output

FROM ubuntu:22.04

LABEL name="cli" \
      repository="http://github.com/cloud-custodian/cloud-custodian"

ENV DEBIAN_FRONTEND=noninteractive

RUN apt-get --yes update \
        && apt-get --yes install python3 python3-venv --no-install-recommends \
        && rm -Rf /var/cache/apt \
        && rm -Rf /var/lib/apt/lists/* \
        && rm -Rf /var/log/*

# These should remain below any other commands because they will invalidate
# the layer cache
COPY --from=build-env /src /src
COPY --from=build-env /usr/local /usr/local
COPY --from=build-env /output /output

WORKDIR /home/custodian
ENV LC_ALL="C.UTF-8" LANG="C.UTF-8"

RUN chmod +x /src/tools/c7n_oci/c7n_oci/handler.py

ENTRYPOINT ["/usr/local/bin/fdk", "/src/tools/c7n_oci/c7n_oci/handler.py", "handler"]

CMD ["--help"]
LABEL "org.opencontainers.image.title"="oci-function"
LABEL "org.opencontainers.image.description"="Docker image for OCI Functions"
LABEL "org.opencontainers.image.documentation"="https://cloudcustodian.io/docs"
